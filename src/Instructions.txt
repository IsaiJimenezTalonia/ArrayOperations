[04:02 p. m.] McCubbins, Chad

Given an array of characters chars, compress it using the following algorithm:

Begin with an empty string s. For each group of consecutive repeating characters in chars:

•    If the group's length is 1, append the character to s.

•    Otherwise, append the character followed by the group's length.

The compressed string s should be returned separately,



Example 1:

Input: chars = ["a","a","b","b","c","c","c","a"]

Output:  This compresses to "a2b2c3a".



Example 2:

Input: chars = ["a"]

Output:  should be: "a"

Explanation: The only group is "a", which remains uncompressed since it's a single character.



Example 3:

Input: chars = ["a","b","b","b","b","b","b","b","b","b","b","b","b"]

Output: the input array should compress to "ab12".



Constraints:

•    1 <= chars.length <= 2000

•    chars[i] is a lowercase English letter, uppercase English letter, digit, or symbol.



Please use the Examples above to test your code!



Also note that a compressed string MUST be able to be decompressed correctly - sorting the data will not allow that.



Please ask questions!